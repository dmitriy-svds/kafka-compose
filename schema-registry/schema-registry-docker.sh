#!/bin/bash

##################################################################################################################
### This script boots the schema-registry container.
### It is expected/assumed that kafka broker and zookeeper containers are linked to this container via docker-compose
### PREQUISITES:
### 1) At least one kafka container which is linked to this container via a link matching the pattern 'kafka*'
### 2) A Zookeeper container which is linked to this container via a link named 'zookeeper'
###    AND which is running on/exposing port 2181
### ACTIONS: 
### This script boots the schema-registry container, as part of the booting process it does the following
### 1) Setup Default values, based on the linked kafka and zookeeper containers
### 2) Use any environment variable that matches 'SCHEMA_REGISTRY_*' pattern to generate a server settings file
### 3) Repeatedly try to connect to the linked kafka containers on their advertised ports.
### 4) Once all linked kafka brokers are up and connectable, then start schema-registry
##################################################################################################################
sr_cfg_file="/etc/schema-registry/schema-registry.properties"


### Setup and export default values.
: ${SCHEMA_REGISTRY_PORT:=8081}
: ${SCHEMA_REGISTRY_KAFKASTORE_TOPIC:=_schemas}
: ${SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL:=$ZOOKEEPER_PORT_2181_TCP_ADDR:$ZOOKEEPER_PORT_2181_TCP_PORT}
: ${SCHEMA_REGISTRY_DEBUG:=false}

export SCHEMA_REGISTRY_PORT
export SCHEMA_REGISTRY_KAFKASTORE_TOPIC
export SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL
export SCHEMA_REGISTRY_DEBUG

### Generate the server properties file using environment variables that match 'SCHEMA_REGISTRY_*' pattern
### E.g an environment variable SCHEMA_REGISTRY_PORT 90 will result in 'port=90' in the properties file
echo '# Generated by schema_registry-docker.sh' > ${sr_cfg_file}
for var in $(env | grep '^SCHEMA_REGISTRY_' | sort); do
  key=$(echo $var | sed -r 's/SCHEMA_REGISTRY_(.*)=.*/\1/g' | tr A-Z a-z | tr _ .)
  value=$(echo $var | sed -r 's/.*=(.*)/\1/g')
  echo "${key}=${value}" >> ${sr_cfg_file}
done


### Wait for all the linked kafka brokers to be running and contactable on their advertised ports.
for var in $(env | grep '^KAFKA[[:digit:]]*_PORT=' | sort); do
  broker=$(echo $var | cut -d'_' -f1)
  broker_ip=$(echo $var | cut -d':' -f2 | cut -c3-)
  broker_port=$(echo $var | cut -d':' -f3)
  while true; do
    printf 'Waiting for %s to come online\n' ${broker}
    echo "" >> /dev/tcp/${broker_ip}/${broker_port} && printf "${broker} is online\n" && break
    sleep 5
  done
done


### Start the schema-registry
exec /usr/bin/schema-registry-start ${sr_cfg_file}

